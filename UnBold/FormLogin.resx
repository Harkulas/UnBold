<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtDRdLLI1X3SwNV+fsDVfn7E1
        XXOyNV8rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxO2INsTRdobE1Xv6xNV7/sTVe/7E1
        Xv+xNV7/sTVe/rA1X5+lLUsRAAAAAAAAAAAAAAAAAAAAAAAAAACxO2INsTVez7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/pixO3acnRRoAAAAAAAAAAAAAAAAAAAAAsDZeorE1Xv+xNV7/sTVe/7Q9
        Zf/CWn7/sTVe/7E1Xv+xNV7/tDtk/7E4Xv+bIj7ZAAAAAAAAAAAAAAAAszNgKLE1Xv2xNV7/sTVe/7E1
        Xv+xNV7/xGGE/7E1Xv+xNV7/sTVe/7M6Y//BWX3/mSA6/54pR0QAAAAAAAAAALA2XXuxNV7/tT9n/7hG
        bP+xNV7/sztj/7Q8ZP+xNV7/sTVe/7E1Xv+0O2T/szpi/5sjP/+dJEC2AAAAAAAAAACwNV+fsTVe/7U/
        Zv++Unf/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+aITz/myI+2QAAAAAAAAAAsDVfn7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+wNV3/lBw0/5ojPdoAAAAAAAAAALE1
        X3yxNV7/sTVe/7E1Xv+yN2D/t0Jp/7E2X/+xNV7/sTVe/7E1Xv+xNV7/pitO/5IbMf+cJEG5AAAAAAAA
        AACwM2AtsTVe/rE1Xv+xNV7/sTVe/7ZBaP/AVnr/sTVe/7E1Xv+xNV7/rzNb/5YfN/+SGzH/oSdETwAA
        AAAAAAAAAAAAALA1XayxNV7/sTVe/7E1Xv+3QWj/v1V5/7E1Xv+xNV7/rzNb/5khPf+SGzH/miI84QAA
        AAAAAAAAAAAAAAAAAACiLlEWpy1P3q8zW/+xNV//t0Jp/7E2X/+xNF7/py1Q/5YfN/+SGzH/lx849p4s
        Tx0AAAAAAAAAAAAAAAAAAAAAAAAAAJ8oSCCaIj7hmSA7/5oiPf+aIj3/lB41/5IbMf+SGzH/miI9454s
        Tx0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQmRVGeJEC/myE93pohPd+cJEHBnidGVAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD+fwAA8A8AAOAHAADAAwAAwAMAAMABAACAAQAAgAEAAMAB
        AADAAwAAwAMAAOAHAADwDwAA/D8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqK1UMszNgKLE1Xz6xNV8+szNgKKorVQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALM3YCWyNV+BsTVey7E1Xv6xNV7/sTVe/7E1Xv+xNV7/sTVe/bE1XcqxNl6AsTJcJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK42XhOwNF6SsTVe+rE1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV75sTVfj6o5YxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACzNlwvsTVe37E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe3qIrS0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAsjVfVrE1XvixNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/qC5S+Z4mQo4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALE0XjGxNV71sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/myM//J0nQ2MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2MWEVsTVe5rE1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+7THH/x2eJ/7Y/Z/+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+oLlH/lB00/aEo
        QyYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALE1X4yxNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv/AWHv/x2eJ/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv++VHj/vE10/7E1
        Xf+VHTT/miE90AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyNl0hsTVe+bE1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7xOc//LcZL/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7U/
        Zv/NdZX/t0Fp/5wjP/+SGzL/oiVGNwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALE1Xn2xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV//xWGD/8JcgP+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/tj9o/811lf+2Qmn/oihI/5IbMf+cI0C/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsTVezrE1
        Xv+xNV7/sTVe/7hEa/+zO2L/sTVe/7E1Xv+xNV7/sTVe/7tLcf++U3j/sjdf/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv++VHj/vE10/7E1Xv+lK0z/khsx/5YfN/cAAAAAAAAAAAAAAAAAAAAAAAAAALMz
        WRSxNV7/sTVe/7E1Xv+xNV7/u0tx/8txkf+0O2T/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/6YsTv+SGzH/khsx/5ksSSMAAAAAAAAAAAAA
        AAAAAAAAszZcL7E1Xv+xNV7/sTVe/7E1Xv+zO2P/zXWV/7hHbf+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/oilJ/5IbMf+SGzH/nCRCXQAA
        AAAAAAAAAAAAAAAAAACyNF5JsTVe/7E1Xv+xNV7/sTVe/8BWe//FY4b/sjdg/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+gJ0X/khsx/5Ib
        Mf+fJER/AAAAAAAAAAAAAAAAAAAAALI0XkmxNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/5oh
        PP+SGzH/khsx/6AnRHsAAAAAAAAAAAAAAAAAAAAArzVgMLE1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+vM1r/kxwx/5IbMf+SGzH/nidGVAAAAAAAAAAAAAAAAAAAAACzM1kUsTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/6QqS/+SGzH/khsx/5IbMf+ZLEkjAAAAAAAAAAAAAAAAAAAAAAAAAACwNV7TsTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7Q9Zf+/VXr/vlN4/7M5Yf+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+wNF3/lh42/5IbMf+SGzH/lx849gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALE1
        XoKxNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E2X//DXYD/x2eJ/7E2X/+xNV7/sTVe/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/6IoSf+SGzH/khsx/5IbMf+dJEC+AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsjZdIbE1XvmxNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7Q7ZP/NdZX/t0Rq/7E1
        Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+pL1T/kxsy/5IbMf+SGzH/kxsy/6MjRjoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAsTVelrE1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/tTxk/811
        lf+3Q2r/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/rTFY/5UeNf+SGzH/khsx/5IbMf+bIj/PAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2MWEVsTVe5rE1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E2
        X//DXYD/x2eJ/7E2X/+xNV7/sTVe/7E1Xv+xNV7/sTVe/6ouVP+VHjX/khsx/5IbMf+SGzH/lR02/J8p
        RSUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiKU5Yqi5R+7E1Xv+xNV7/sTVe/7E1
        Xv+zO2P/v1V6/75TeP+zOWH/sTVe/7E1Xv+xNV7/sTVe/7A0Xf+iKEn/kxsy/5IbMf+SGzH/khsx/5Ic
        Mv+iJ0VoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfJUSPmyM9/agt
        Uf+xNV7/sTVe/7E1Xv+xNV7/sTVe/7E1Xv+xNV7/sTVe/680W/+lKk3/lh42/5IbMf+SGzH/khsx/5Ib
        Mf+SHDL/niZCjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACfKURwlB00/ZQeNf+cJED/oilJ/6UrTf+nLE//pCpL/6EoR/+aIj3/khsy/5IbMf+SGzH/khsx/5Ib
        Mf+SGzH/lR01/aApRmkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACjJ0EnmSE815IbMv+SGzH/khsx/5IbMf+SGzH/khsx/5IbMf+SGzH/khsx/5Ib
        Mf+SGzH/kxsy/5sjPs6ZLEkjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnylGRZsjP8WVHjX4khsx/5IbMf+SGzH/khsx/5Ib
        Mf+SGzL/mB849JskQMCgJkVDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUIUIfnSJAW6Am
        RHGfKERtoiZISqYhQxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////gB///gAH//wAA//4AAD/8AAA/+AAAH/AA
        AA/wAAAP8AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB/AAAA/wAAAP+AAAH/wA
        AD/8AAA//wAA//+AAf//4Af/////////////////
</value>
  </data>
</root>